<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="11" passed="10">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="3025" started-at="2018-07-25T05:59:25Z" finished-at="2018-07-25T05:59:28Z">
    <groups>
      <group name="g02">
        <method signature="GroupTest.f3()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f3" class="day02.GroupTest"/>
        <method signature="GroupTest.f4()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f4" class="day02.GroupTest"/>
      </group> <!-- g02 -->
      <group name="g01">
        <method signature="GroupTest.f1()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f1" class="day02.GroupTest"/>
        <method signature="GroupTest.f2()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f2" class="day02.GroupTest"/>
      </group> <!-- g01 -->
    </groups>
    <test name="Command line test" duration-ms="3025" started-at="2018-07-25T05:59:25Z" finished-at="2018-07-25T05:59:28Z">
      <class name="day02.OverTimeTest">
        <test-method status="FAIL" signature="f()[pri:0, instance:day02.OverTimeTest@16e8792]" name="f" duration-ms="3006" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:28Z">
          <exception class="org.testng.internal.thread.ThreadTimeoutException">
            <message>
              <![CDATA[Method org.testng.internal.TestNGMethod.f() didn't finish within the time-out 3000]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.internal.thread.ThreadTimeoutException: Method org.testng.internal.TestNGMethod.f() didn't finish within the time-out 3000
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.Fibonacci.getFib(Fibonacci.java:24)
	at day02.OverTimeTest.f(OverTimeTest.java:9)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.InvokeMethodRunnable.runOne(InvokeMethodRunnable.java:46)
	at org.testng.internal.InvokeMethodRunnable.run(InvokeMethodRunnable.java:37)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.internal.thread.ThreadTimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- day02.OverTimeTest -->
      <class name="day02.MyExceptionTest">
        <test-method status="PASS" signature="f()[pri:0, instance:day02.MyExceptionTest@6e6d5e]" name="f" duration-ms="1" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <exception class="day02.MyException">
            <message>
              <![CDATA[索引值超出限制]]>
            </message>
            <full-stacktrace>
              <![CDATA[day02.MyException: 索引值超出限制
	at day02.Fibonacci.getFib(Fibonacci.java:15)
	at day02.MyExceptionTest.f(MyExceptionTest.java:8)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1224)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1149)
	at org.testng.TestNG.run(TestNG.java:1057)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
	at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- day02.MyException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- day02.MyExceptionTest -->
      <class name="day02.GroupTest">
        <test-method status="PASS" signature="begin()[pri:0, instance:day02.GroupTest@1ba5a14]" name="begin" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- begin -->
        <test-method status="PASS" signature="f1()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f1" duration-ms="1" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="end()[pri:0, instance:day02.GroupTest@1ba5a14]" name="end" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method status="PASS" signature="f2()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f2" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="f3()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f3" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f3 -->
        <test-method status="PASS" signature="f4()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f4" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f4 -->
        <test-method status="PASS" signature="f5()[pri:0, instance:day02.GroupTest@1ba5a14]" name="f5" duration-ms="0" depends-on-groups="g02, g01" started-at="2018-07-25T13:59:28Z" finished-at="2018-07-25T13:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f5 -->
      </class> <!-- day02.GroupTest -->
      <class name="day02.IgnoreTest">
        <test-method status="PASS" signature="f1()[pri:0, instance:day02.IgnoreTest@12cbfa]" name="f1" duration-ms="1" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
      </class> <!-- day02.IgnoreTest -->
      <class name="day02.HelloTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:day02.HelloTest@cf57e3]" name="beforeSuite" is-config="true" duration-ms="7" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest()[pri:0, instance:day02.HelloTest@cf57e3]" name="beforeTest" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:day02.HelloTest@cf57e3]" name="beforeClass" is-config="true" duration-ms="1" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:day02.HelloTest@cf57e3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="f()[pri:0, instance:day02.HelloTest@cf57e3]" name="f" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:day02.HelloTest@cf57e3]" name="afterMethod" is-config="true" duration-ms="1" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="f2()[pri:0, instance:day02.HelloTest@cf57e3]" name="f2" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:day02.HelloTest@cf57e3]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:day02.HelloTest@cf57e3]" name="afterClass" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:day02.HelloTest@cf57e3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:25Z" finished-at="2018-07-25T13:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:day02.HelloTest@cf57e3]" name="afterTest" is-config="true" duration-ms="1" started-at="2018-07-25T13:59:28Z" finished-at="2018-07-25T13:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:day02.HelloTest@cf57e3]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-07-25T13:59:28Z" finished-at="2018-07-25T13:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- day02.HelloTest -->
      <class name="day02.TestRandomEmailGenerator">
        <test-method status="PASS" signature="f()[pri:0, instance:day02.TestRandomEmailGenerator@16532d6]" name="f" duration-ms="3" started-at="2018-07-25T13:59:28Z" finished-at="2018-07-25T13:59:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
      </class> <!-- day02.TestRandomEmailGenerator -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
